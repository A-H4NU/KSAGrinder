<Page x:Class="KSAGrinder.Pages.MainPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:KSAGrinder.Pages"
      xmlns:sys="clr-namespace:System;assembly=mscorlib"
      xmlns:valueConverters="clr-namespace:KSAGrinder.ValueConverters"
      xmlns:properties="clr-namespace:KSAGrinder.Properties"
      DataContext="{Binding RelativeSource={RelativeSource Self}}"
      mc:Ignorable="d" 
      d:DesignHeight="720" d:DesignWidth="1280"
      Title="MainPage">
    <Page.Resources>
        <valueConverters:ConvertItemToIndexDataRow x:Key="IndexConverter"/>
        <valueConverters:LectureGrayingIfSelected x:Key="GrayingIfSelected"/>
        <valueConverters:BlueIfHasNote x:Key="BlueIfHasNote"/>
        <valueConverters:ScoreToColor x:Key="ScoreToColor"/>
        <valueConverters:DepartmentToString x:Key="DepartmentToString"/>
        <valueConverters:TextToVisibility x:Key="TextToVisibility"/>

        <!--#region ScrollBarStyle -->
        <!--출처: https://icodebroker.tistory.com/8476 [ICODEBROKER]-->
        <Style x:Key="ScrollBarThumbKey" TargetType="{x:Type Thumb}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid x:Name="grid">
                            <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Fill="Transparent" />
                            <Border x:Name="rectangle" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" CornerRadius="5" Background="{TemplateBinding Background}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Tag" Value="Horizontal">
                                <Setter TargetName="rectangle" Property="Width" Value="Auto" />
                                <Setter TargetName="rectangle" Property="Height" Value="7" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
            <Setter Property="Width" Value="8" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="LightGray" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="rootGrid" Width="8" Background="{TemplateBinding Background}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0.00001*" />
                            </Grid.RowDefinitions>
                            <Track x:Name="PART_Track" Grid.Row="0" IsDirectionReversed="true" Focusable="false">
                                <Track.Thumb>
                                    <Thumb x:Name="thumb" Style="{DynamicResource ScrollBarThumbKey}" Background="{TemplateBinding Foreground}" />
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton x:Name="pageUpButton" Opacity="0" Focusable="false" Command="ScrollBar.PageDownCommand" />
                                </Track.IncreaseRepeatButton>
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton x:Name="pageDownButton" Opacity="0" Focusable="false" Command="ScrollBar.PageUpCommand" />
                                </Track.DecreaseRepeatButton>
                            </Track>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger SourceName="thumb" Property="IsMouseOver" Value="true">
                                <Setter TargetName="thumb" Property="Background" Value="{DynamicResource ButtonSelectBrush}" />
                            </Trigger>
                            <Trigger SourceName="thumb" Property="IsDragging" Value="true">
                                <Setter TargetName="thumb" Property="Background" Value="{DynamicResource DarkBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="thumb" Property="Visibility" Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="Orientation" Value="Horizontal">
                                <Setter TargetName="rootGrid" Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="PART_Track" Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Width" Value="Auto" />
                                <Setter Property="Height" Value="8" />
                                <Setter TargetName="thumb" Property="Tag" Value="Horizontal" />
                                <Setter TargetName="pageDownButton" Property="Command" Value="ScrollBar.PageLeftCommand" />
                                <Setter TargetName="pageUpButton" Property="Command" Value="ScrollBar.PageRightCommand" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Light">
                    <Setter Property="Foreground" Value="LightGray"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Dark">
                    <Setter Property="Foreground" Value="#4d4d4d"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Black">
                    <Setter Property="Foreground" Value="#2e2e2e"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <!--#endregion-->

        <!-- Timetable Styles -->
        <Style x:Key="TimetableDataGridStyle" TargetType="{x:Type DataGrid}">
            <Style.Resources>
                <!--#region Style the select all button -->
                <Style x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}" TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="Transparent"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
                <!--#endregion-->
            </Style.Resources>
            <Setter Property="ColumnHeaderStyle" Value="{DynamicResource TimetableColumnHeaderStyle}"/>
            <Setter Property="RowHeaderStyle" Value="{DynamicResource TimetableRowHeaderStyle}"/>
            <Setter Property="CellStyle" Value="{DynamicResource TimetableDataGridCellStyle}"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Light">
                    <Setter Property="Background" Value="White"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="HorizontalGridLinesBrush" Value="LightGray"/>
                    <Setter Property="VerticalGridLinesBrush" Value="LightGray"/>
                    <Setter Property="BorderBrush" Value="{StaticResource BlueBorder}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Dark">
                    <Setter Property="Background" Value="#2e2e2e"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="HorizontalGridLinesBrush" Value="#4d4d4d"/>
                    <Setter Property="VerticalGridLinesBrush" Value="#4d4d4d"/>
                    <Setter Property="BorderBrush" Value="{StaticResource DarkBlueBorder}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Black">
                    <Setter Property="Background" Value="Black"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="HorizontalGridLinesBrush" Value="#2e2e2e"/>
                    <Setter Property="VerticalGridLinesBrush" Value="#2e2e2e"/>
                    <Setter Property="BorderBrush" Value="{StaticResource DarkBlueBorder}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        
        <Style x:Key="TimetableColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="Height" Value="30"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="15"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Light">
                    <Setter Property="Background" Value="LightGray"/>
                    <Setter Property="Foreground" Value="Black"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Dark">
                    <Setter Property="Background" Value="#4d4d4d"/>
                    <Setter Property="Foreground" Value="White"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Black">
                    <Setter Property="Background" Value="#2e2e2e"/>
                    <Setter Property="Foreground" Value="White"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="TimetableRowHeaderStyle" TargetType="{x:Type DataGridRowHeader}">
            <Setter Property="Content" Value="{Binding Converter={StaticResource IndexConverter}}" />
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="15"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Light">
                    <Setter Property="Background" Value="LightGray"/>
                    <Setter Property="Foreground" Value="Black"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Dark">
                    <Setter Property="Background" Value="#4d4d4d"/>
                    <Setter Property="Foreground" Value="White"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Black">
                    <Setter Property="Background" Value="#2e2e2e"/>
                    <Setter Property="Foreground" Value="White"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="DataGridCellStyle" TargetType="{x:Type DataGridCell}">
            <Setter Property="TextBlock.TextAlignment" Value="Center"/>
            <Setter Property="TextBlock.HorizontalAlignment" Value="Stretch"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Light">
                    <Setter Property="Background" Value="White"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Dark">
                    <Setter Property="Background" Value="#2e2e2e"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Black">
                    <Setter Property="Background" Value="Black"/>
                </DataTrigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#0078d7"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="TimetableDataGridCellStyle" TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource DataGridCellStyle}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Light">
                    <!--<Setter Property="Background" Value="White"/>-->
                    <Setter Property="Foreground" Value="Black"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Dark">
                    <!--<Setter Property="Background" Value="#2e2e2e"/>-->
                    <Setter Property="Foreground" Value="White"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Black">
                    <!--<Setter Property="Background" Value="Black"/>-->
                    <Setter Property="Foreground" Value="White"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        
        <!-- LectureTable Styles -->
        <Style x:Key="DataGridStyle" TargetType="{x:Type DataGrid}">
            <Setter Property="ColumnHeaderStyle" Value="{DynamicResource LectureTableColumnHeaderStyle}"/>
            <Setter Property="CellStyle" Value="{DynamicResource DataGridCellStyle}"/>
            <Setter Property="HorizontalGridLinesBrush" Value="Gray"/>
            <Setter Property="VerticalGridLinesBrush" Value="Gray"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Light">
                    <Setter Property="Background" Value="#f3f0f0"/>
                    <Setter Property="BorderBrush" Value="#0078d7"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Dark">
                    <Setter Property="Background" Value="#262626"/>
                    <Setter Property="BorderBrush" Value="#004d8a"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Black">
                    <Setter Property="Background" Value="Black"/>
                    <Setter Property="BorderBrush" Value="#004d8a"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="CurrentClassDataGridStyle" TargetType="{x:Type DataGrid}" BasedOn="{StaticResource DataGridStyle}">
            <Style.Resources>
                <SolidColorBrush x:Key="Black" Color="Black"/>
                <SolidColorBrush x:Key="White" Color="White"/>
            </Style.Resources>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Light">
                    <Setter Property="Foreground" Value="{DynamicResource Black}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Dark">
                    <Setter Property="Foreground" Value="{DynamicResource White}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Black">
                    <Setter Property="Foreground" Value="{DynamicResource White}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="LectureTableColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="Height" Value="20"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="BorderThickness" Value="0,0,1,0"/>
            <Setter Property="BorderBrush" Value="White"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Light">
                    <Setter Property="Background" Value="LightGray"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="BorderBrush" Value="Gray"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Dark">
                    <Setter Property="Background" Value="#4d4d4d"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="BorderBrush" Value="Gray"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Black">
                    <Setter Property="Background" Value="#2e2e2e"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="BorderBrush" Value="Gray"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- Used in MainPage.xaml.cs -->
        <Style x:Key="LectureTableTextBlockStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
        </Style>

    </Page.Resources>

    <DockPanel>
        <Menu Padding="5" FontSize="13" DockPanel.Dock="Top" Style="{StaticResource MenuStyle}">
            <MenuItem Style="{DynamicResource MenuItemStyle}" Header="파일">
                <MenuItem Header="새 시간표 (Ctrl+N)" Click="MenuNewSchedule_Click"/>
                <MenuItem Header="열기 (Ctrl+O)" Click="MenuOpen_Click"/>
                <MenuItem Header="학번에서 불러오기" Click="MenuLoadID_Click"/>
                <MenuItem Header="저장 (Ctrl+S)" Click="MenuSave_Click"/>
                <MenuItem Header="다른 이름으로 저장" Click="MenuSaveAs_Click"/>
            </MenuItem>
            <MenuItem Header="도구">
                <MenuItem Header="설정 (Ctrl+I)" Click="MenuOption_Click"/>
            </MenuItem>
        </Menu>
        <Grid DockPanel.Dock="Bottom" Margin="10">
            <Grid.RowDefinitions>
                <RowDefinition Height="2*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MinWidth="600" Width="3*"/>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="2*"/>
            </Grid.ColumnDefinitions>

            <DockPanel x:Name="TimetablePanel" Grid.RowSpan="2" Margin="0,0,5,0">
                <Grid DockPanel.Dock="Top">
                    <Label Content="시간표" FontSize="22" FontWeight="SemiBold" HorizontalContentAlignment="Center" Style="{StaticResource LabelStyle}"/>
                    <Label x:Name="LblValid" HorizontalAlignment="Right" VerticalAlignment="Bottom" Style="{StaticResource LabelStyle}"/>
                </Grid>
                <DataGrid x:Name="Timetable" ColumnWidth="*"
                          Style="{DynamicResource TimetableDataGridStyle}"
                          ItemsSource="{Binding}" AutoGenerateColumns="True"
                          SelectionUnit="Cell"
                          CanUserReorderColumns="False" CanUserResizeColumns="False" CanUserSortColumns="False"
                          CanUserResizeRows="False" CanUserAddRows="False" IsReadOnly="True"
                          HorizontalScrollBarVisibility="Disabled"
                          ScrollViewer.CanContentScroll="False">
                </DataGrid>
            </DockPanel>
            <DockPanel Margin="5,0,5,5" Grid.Column="1" Grid.Row="0">
                <DockPanel DockPanel.Dock="Top" Margin="0,0,0,10">
                    <ComboBox x:Name="CmbDepartment" Width="85.24" DockPanel.Dock="Left" FontSize="13" VerticalContentAlignment="Center" SelectedIndex="0"
                          ItemsSource="{Binding DepartmentCollection}" SelectionChanged="CmbDepartment_SelectionChanged">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding ., Converter={StaticResource DepartmentToString}}"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <!--<Label Content="검색: " FontSize="13" Margin="10,0,0,0"/>-->
                    <Grid Margin="10,0,0,0" Style="{StaticResource HintGridStyle}">
                        <TextBlock x:Name="TxtHint" Margin="5,2" FontSize="13" MinWidth="50" Text="검색 (초성 검색 지원)" VerticalAlignment="Center"
                                   Foreground="LightGray" Visibility="{Binding ElementName=TxtSearch, Path=Text, Converter={StaticResource TextToVisibility}}" IsHitTestVisible="False"/>
                        <TextBox x:Name="TxtSearch" VerticalContentAlignment="Center" Background="Transparent" FontSize="13" TextChanged="TxtSearch_TextChanged" Style="{StaticResource TextBoxStyle}"/>
                    </Grid>
                </DockPanel>
                <Grid Grid.Column="1" Grid.Row="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="5*"/>
                        <RowDefinition Height="3*"/>
                    </Grid.RowDefinitions>

                    <DataGrid Grid.Row="0" DockPanel.Dock="Top" x:Name="LectureTable" Margin="0,0,0,10" SelectionMode="Single" MinHeight="100"
                      Style="{DynamicResource DataGridStyle}" ItemsSource="{Binding LectureCollection}" AutoGenerateColumns="False"
                      HeadersVisibility="Column" CanUserReorderColumns="False" CanUserResizeRows="False"
                      CanUserResizeColumns="False" CanUserAddRows="False" IsReadOnly="True" SelectionChanged="LectureTable_SelectionChanged">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="학부" Width="55" Binding="{Binding Department, Converter={StaticResource DepartmentToString}}"/>
                            <DataGridTextColumn Header="강의명" Width="*" Binding="{Binding Name}"/>
                            <DataGridTextColumn Header="학년" Width="40" Binding="{Binding Grade}"/>
                            <DataGridTextColumn Header="분반 수" Width="55" Binding="{Binding NumClass}" CanUserSort="False"/>
                        </DataGrid.Columns>
                        <DataGrid.RowStyle>
                            <Style TargetType="{x:Type DataGridRow}">
                                <Setter Property="Foreground">
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource GrayingIfSelected}">
                                            <Binding Path="Code"/>
                                            <Binding Path="Grade"/>
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </DataGrid.RowStyle>
                    </DataGrid>

                    <DataGrid Grid.Row="1" DockPanel.Dock="Bottom" x:Name="ClassTable"
                              Style="{StaticResource DataGridStyle}" ItemsSource="{Binding ClassCollection}" AutoGenerateColumns="False"
                              HeadersVisibility="Column" CanUserReorderColumns="False" CanUserResizeRows="False"
                              CanUserResizeColumns="False" CanUserAddRows="False" IsReadOnly="True" CanUserSortColumns="False">
                        <DataGrid.Resources>
                            <ContextMenu x:Key="RowMenu">
                                <MenuItem Header="세부 정보 보기" Click="ClassTableMenuItem_Click"/>
                            </ContextMenu>
                        </DataGrid.Resources>
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="분반" MaxWidth="40" Binding="{Binding Number}"/>
                            <DataGridTextColumn Header="선생님" Width="60" Binding="{Binding Teacher}"/>
                            <DataGridTextColumn Header="요일/시간" Width="*" Binding="{Binding DayTime}"/>
                            <DataGridTextColumn Header="신청인원" MinWidth="65" Binding="{Binding Enroll}"/>
                        </DataGrid.Columns>
                        <DataGrid.RowStyle>
                            <Style TargetType="{x:Type DataGridRow}">
                                <Setter Property="ContextMenu" Value="{StaticResource RowMenu}"/>
                                <EventSetter Event="MouseDoubleClick" Handler="DataGridRow_MouseDoubleClick"/>
                                <Setter Property="Foreground">
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource BlueIfHasNote}">
                                            <Binding Path="Code"/>
                                            <Binding Path="Grade"/>
                                            <Binding Path="Number"/>
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </DataGrid.RowStyle>
                    </DataGrid>
                </Grid>
            </DockPanel>

            <DockPanel Margin="5,5,5,0" Grid.Column="1" Grid.Row="1">
                <TextBlock x:Name="LblCredit" DockPanel.Dock="Top" TextAlignment="Right" Margin="0,0,0,5" Text="총 0학점" Style="{StaticResource TextStyle}"/>
                <DataGrid x:Name="CurrentClassTable" DockPanel.Dock="Top" AutoGenerateColumns="False"
                  Style="{DynamicResource CurrentClassDataGridStyle}" ItemsSource="{Binding CurrentClassCollection}"
                  HeadersVisibility="Column" CanUserReorderColumns="False" CanUserResizeRows="False"
                  CanUserResizeColumns="False" CanUserAddRows="False" CanUserSortColumns="False">
                    <DataGrid.Columns>
                        <DataGridCheckBoxColumn Header="고정" Width="40" ElementStyle="{StaticResource GridCheckBoxSytle}"/>
                        <DataGridTextColumn Header="강의명" Width="*" Binding="{Binding Name}" IsReadOnly="True"/>
                        <DataGridTextColumn Header="학점" Width="40" Binding="{Binding Credit}" IsReadOnly="True"/>
                        <DataGridTextColumn Header="분반" Width="40" Binding="{Binding Number}" IsReadOnly="True"/>
                        <DataGridTextColumn Header="선생님" Width="55" Binding="{Binding Teacher}" IsReadOnly="True"/>
                    </DataGrid.Columns>
                    <DataGrid.RowStyle>
                        <Style TargetType="{x:Type DataGridRow}">
                            <EventSetter Event="MouseRightButtonUp" Handler="CurrentClassTableRow_RightClick"/>
                            <EventSetter Event="KeyDown" Handler="CurrentClassTableRow_KeyDown"/>
                        </Style>
                    </DataGrid.RowStyle>
                </DataGrid>
                
            </DockPanel>

            <DockPanel Grid.Column="2" Grid.Row="0" Grid.RowSpan="2" Margin="5,0,0,0">
                <!--<DockPanel DockPanel.Dock="Top" Margin="0,0,0,10">
                    <Label Content="선호: " FontSize="13"/>
                    <ComboBox x:Name="CmbPreference" ItemsSource="{Binding PreferenceCollection}"
                              SelectedIndex="0" VerticalContentAlignment="Center" FontSize="13"/>
                </DockPanel>-->
                <Grid DockPanel.Dock="Top" Margin="0,0,0,10">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Button x:Name="BtnGenerate" Grid.Column="0" Content="조합" Height="25" Margin="0,0,3,0" Click="BtnGenerate_Click"/>
                    <Button x:Name="BtnTrade" Grid.Column="1" Content="트레이드 탐색" Height="25" Margin="3,0,0,0" Click="BtnTrade_Click"/>
                </Grid>

                <Label x:Name="LblNumSchedules" DockPanel.Dock="Top" HorizontalContentAlignment="Center"
                       Content="총 0개의 시간표를 조합했습니다." Style="{StaticResource LabelStyle}"/>

                <DataGrid x:Name="SchedulesTable" ItemsSource="{Binding ScheduleCollection}" AutoGenerateColumns="False" IsReadOnly="True"
                          Style="{StaticResource DataGridStyle}"
                          ColumnHeaderStyle="{StaticResource LectureTableColumnHeaderStyle}" CellStyle="{StaticResource TimetableDataGridCellStyle}"
                          HeadersVisibility="Column" CanUserReorderColumns="False" Sorting="SchedulesTable_Sorting"
                          HorizontalGridLinesBrush="Black" VerticalGridLinesBrush="Black">
                    <DataGrid.Columns>
                        <DataGridTextColumn Width="*" Header="1공강" Binding="{Binding Evaluate1Empty}">
                            <DataGridTextColumn.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Setter Property="BorderThickness" Value="0"/>
                                    <Setter Property="Background" Value="{Binding Evaluate1Empty, Converter={StaticResource ScoreToColor}}"/>
                                </Style>
                            </DataGridTextColumn.CellStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Width="*" Header="4공강" Binding="{Binding Evaluate4Empty}">
                            <DataGridTextColumn.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Setter Property="BorderThickness" Value="0"/>
                                    <Setter Property="Background" Value="{Binding Evaluate4Empty, Converter={StaticResource ScoreToColor}}"/>
                                </Style>
                            </DataGridTextColumn.CellStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Width="*" Header="5공강" Binding="{Binding Evaluate5Empty}">
                            <DataGridTextColumn.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Setter Property="BorderThickness" Value="0"/>
                                    <Setter Property="Background" Value="{Binding Evaluate5Empty, Converter={StaticResource ScoreToColor}}"/>
                                </Style>
                            </DataGridTextColumn.CellStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Width="*" Header="면학 종료" Binding="{Binding EvaluateCompact}">
                            <DataGridTextColumn.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Setter Property="BorderThickness" Value="0"/>
                                    <Setter Property="Background" Value="{Binding EvaluateCompact, Converter={StaticResource ScoreToColor}}"/>
                                </Style>
                            </DataGridTextColumn.CellStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Width="*" Header="분반 이동" Binding="{Binding EvaluateLowNumMoves}">
                            <DataGridTextColumn.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Setter Property="BorderThickness" Value="0"/>
                                    <Setter Property="Background" Value="{Binding EvaluateLowNumMoves, Converter={StaticResource ScoreToColor}}"/>
                                </Style>
                            </DataGridTextColumn.CellStyle>
                        </DataGridTextColumn>
                    </DataGrid.Columns>
                    <DataGrid.RowStyle>
                        <Style TargetType="{x:Type DataGridRow}">
                            <EventSetter Event="MouseDoubleClick" Handler="SchedulesTableRow_MouseDoubleClick"/>
                            <Setter Property="Foreground" Value="Black"/>
                            <Setter Property="BorderThickness" Value="0,0,0,0"/>
                        </Style>
                    </DataGrid.RowStyle>
                </DataGrid>
            </DockPanel>

        </Grid>
    </DockPanel>
    
</Page>
